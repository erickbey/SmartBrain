{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erick\\\\Documents\\\\portfolio-projects\\\\smartbrain\\\\smartbrain\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport Logo from './components/logo/Logo';\nimport Navigation from './components/navigation/Navigation';\nimport Rank from './components/rank/Rank';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport SignIn from './components/signIn/SignIn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [boxCoordinates, setBoxCoordinates] = useState({});\n  const particlesOptions = {\n    fpsLimit: 120,\n    interactivity: {\n      events: {\n        onHover: {\n          enable: true,\n          mode: \"repulse\"\n        },\n        resize: true\n      },\n      modes: {\n        push: {\n          quantity: 4\n        },\n        repulse: {\n          distance: 100,\n          duration: 0.4\n        }\n      }\n    },\n    particles: {\n      color: {\n        value: \"#ffffff\"\n      },\n      links: {\n        color: \"#ffffff\",\n        distance: 150,\n        enable: true,\n        opacity: 0.5,\n        width: 1\n      },\n      collisions: {\n        enable: true\n      },\n      move: {\n        direction: \"none\",\n        enable: true,\n        outModes: {\n          default: \"bounce\"\n        },\n        random: false,\n        speed: 2,\n        straight: false\n      },\n      number: {\n        density: {\n          enable: true,\n          area: 900\n        },\n        value: 80\n      },\n      opacity: {\n        value: 0.5\n      },\n      shape: {\n        type: \"circle\"\n      },\n      size: {\n        value: {\n          min: 1,\n          max: 5\n        }\n      }\n    },\n    detectRetina: true\n  };\n\n  const calculateBoxCoordinates = data => {\n    const faceCoordinates = JSON.parse(data, null, 2).outputs[0].data.regions[0].region_info.bounding_box;\n    console.log(faceCoordinates);\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftColumn: faceCoordinates.left_col * width,\n      topRow: faceCoordinates.top_row * height,\n      rightColumn: width - faceCoordinates.right_col * width,\n      bottomRow: height - faceCoordinates.bottom_row * height\n    };\n  };\n\n  const displayFaceBox = boxCoordinates => {\n    console.log(boxCoordinates);\n    setBoxCoordinates(boxCoordinates);\n  };\n\n  const onInputChange = e => {\n    console.log(input);\n    setInput(e.target.value);\n  };\n\n  const onSubmit = () => {\n    setImageUrl(input);\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": \"ltbrp03abi48\",\n        \"app_id\": \"f232d0bac678457aae0377bd2cf8cd13\"\n      },\n      \"inputs\": [{\n        \"data\": {\n          \"image\": {\n            \"url\": `${input}`\n          }\n        }\n      }]\n    });\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key 93c052416161441e9a3db9c5122a28a0'\n      },\n      body: raw\n    };\n    fetch(\"https://api.clarifai.com/v2/models/face-detection/outputs\", requestOptions).then(response => response.text()).then(result => displayFaceBox(calculateBoxCoordinates(result))).catch(error => console.log('error', error));\n  };\n\n  const particlesInit = async main => {\n    await loadFull(main);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n      onInputChange: onInputChange,\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n      boxCoordinates: boxCoordinates,\n      imageUrl: imageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tx/j9JXmaupqwGlq7Y+iQ/YYYPI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/erick/Documents/portfolio-projects/smartbrain/smartbrain/src/App.js"],"names":["React","useState","ImageLinkForm","Logo","Navigation","Rank","FaceRecognition","Particles","loadFull","SignIn","App","input","setInput","imageUrl","setImageUrl","boxCoordinates","setBoxCoordinates","particlesOptions","fpsLimit","interactivity","events","onHover","enable","mode","resize","modes","push","quantity","repulse","distance","duration","particles","color","value","links","opacity","width","collisions","move","direction","outModes","default","random","speed","straight","number","density","area","shape","type","size","min","max","detectRetina","calculateBoxCoordinates","data","faceCoordinates","JSON","parse","outputs","regions","region_info","bounding_box","console","log","image","document","getElementById","Number","height","leftColumn","left_col","topRow","top_row","rightColumn","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","e","target","onSubmit","raw","stringify","requestOptions","method","headers","body","fetch","then","response","text","result","catch","error","particlesInit","main"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {  useState } from 'react';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport Logo from './components/logo/Logo';\nimport Navigation from './components/navigation/Navigation';\nimport Rank from './components/rank/Rank';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport SignIn from './components/signIn/SignIn';\n\n\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [boxCoordinates, setBoxCoordinates] = useState({});\n  \n   const particlesOptions = {\n    fpsLimit: 120,\n    interactivity: {\n      events: {\n        onHover: {\n          enable: true,\n          mode: \"repulse\",\n        },\n        resize: true,\n      },\n      modes: {\n        push: {\n          quantity: 4,\n        },\n        repulse: {\n          distance: 100,\n          duration: 0.4,\n        },\n      },\n    },\n    particles: {\n      color: {\n        value: \"#ffffff\",\n      },\n      links: {\n        color: \"#ffffff\",\n        distance: 150,\n        enable: true,\n        opacity: 0.5,\n        width: 1,\n      },\n      collisions: {\n        enable: true,\n      },\n      move: {\n        direction: \"none\",\n        enable: true,\n        outModes: {\n          default: \"bounce\",\n        },\n        random: false,\n        speed: 2,\n        straight: false,\n      },\n      number: {\n        density: {\n          enable: true,\n          area: 900,\n        },\n        value: 80,\n      },\n      opacity: {\n        value: 0.5,\n      },\n      shape: {\n        type: \"circle\",\n      },\n      size: {\n        value: { min: 1, max: 5 },\n      },\n    },\n    detectRetina: true,\n  }\n\n  const calculateBoxCoordinates = (data) => {\n    const faceCoordinates = JSON.parse(data, null, 2).outputs[0].data.regions[0].region_info.bounding_box;\n    console.log(faceCoordinates)\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftColumn: faceCoordinates.left_col * width,\n      topRow: faceCoordinates.top_row * height,\n      rightColumn: width - (faceCoordinates.right_col * width),\n      bottomRow: height - (faceCoordinates.bottom_row * height)\n    }\n  }\n\n  const displayFaceBox = (boxCoordinates) => {\n    console.log(boxCoordinates)\n    setBoxCoordinates(boxCoordinates);\n  }\n\n  const onInputChange = (e) => {\n    console.log(input)\n    setInput(e.target.value)\n  }\n\n  const onSubmit = () => {\n    setImageUrl(input);\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n            \"user_id\": \"ltbrp03abi48\",\n            \"app_id\": \"f232d0bac678457aae0377bd2cf8cd13\"\n        },\n      \"inputs\": [\n        {\n          \"data\": {\n            \"image\": {\n              \"url\": `${input}`\n            }\n          }\n        }\n      ]\n    });\n    \n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key 93c052416161441e9a3db9c5122a28a0'\n      },\n      body: raw\n    };\n    \n    fetch(\"https://api.clarifai.com/v2/models/face-detection/outputs\", requestOptions)\n      .then(response => response.text())\n      .then(result => displayFaceBox(calculateBoxCoordinates(result)))\n      .catch(error => console.log('error', error));\n  }\n\n  const particlesInit = async (main) => {\n    await loadFull(main);\n  };\n\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <SignIn />\n      <Logo />\n      <Rank />\n      <ImageLinkForm \n        onInputChange={onInputChange} \n        onSubmit={onSubmit}/>\n      <FaceRecognition boxCoordinates={boxCoordinates} imageUrl={imageUrl} />\n      {/* <Particles\n        id=\"tsparticles\"\n        init={particlesInit}\n        options={particlesOptions}\n    /> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}