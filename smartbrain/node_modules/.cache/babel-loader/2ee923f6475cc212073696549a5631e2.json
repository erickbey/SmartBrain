{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erick\\\\Documents\\\\portfolio-projects\\\\smartbrain\\\\smartbrain\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport Logo from './components/logo/Logo';\nimport Navigation from './components/navigation/Navigation';\nimport Rank from './components/rank/Rank';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport SignIn from './components/signIn/SignIn';\nimport Register from './components/register/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [boxCoordinates, setBoxCoordinates] = useState({});\n  const [route, setRoute] = useState('signin');\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [userProfile, setUserProfile] = useState({\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  });\n\n  const initialState = () => {\n    setInput('');\n    setImageUrl('');\n    setBoxCoordinates({});\n    setRoute('signin');\n    setIsSignedIn(false);\n    setUserProfile({\n      id: '',\n      name: '',\n      email: '',\n      entries: 0,\n      joined: ''\n    });\n  };\n\n  const loadUser = userData => {\n    setUserProfile({\n      id: userData.id,\n      name: userData.name,\n      email: userData.email,\n      entries: userData.entries,\n      joined: userData.joined\n    });\n  };\n\n  const particlesOptions = {\n    fpsLimit: 120,\n    interactivity: {\n      events: {\n        onHover: {\n          enable: true,\n          mode: \"repulse\"\n        },\n        resize: true\n      },\n      modes: {\n        push: {\n          quantity: 4\n        },\n        repulse: {\n          distance: 100,\n          duration: 0.4\n        }\n      }\n    },\n    particles: {\n      color: {\n        value: \"#ffffff\"\n      },\n      links: {\n        color: \"#ffffff\",\n        distance: 150,\n        enable: true,\n        opacity: 0.5,\n        width: 1\n      },\n      collisions: {\n        enable: true\n      },\n      move: {\n        direction: \"none\",\n        enable: true,\n        outModes: {\n          default: \"bounce\"\n        },\n        random: false,\n        speed: 2,\n        straight: false\n      },\n      number: {\n        density: {\n          enable: true,\n          area: 900\n        },\n        value: 80\n      },\n      opacity: {\n        value: 0.5\n      },\n      shape: {\n        type: \"circle\"\n      },\n      size: {\n        value: {\n          min: 1,\n          max: 5\n        }\n      }\n    },\n    detectRetina: true\n  };\n\n  const calculateBoxCoordinates = data => {\n    const faceCoordinates = JSON.parse(data, null, 2).outputs[0].data.regions[0].region_info.bounding_box;\n    console.log(faceCoordinates);\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftColumn: faceCoordinates.left_col * width,\n      topRow: faceCoordinates.top_row * height,\n      rightColumn: width - faceCoordinates.right_col * width,\n      bottomRow: height - faceCoordinates.bottom_row * height\n    };\n  };\n\n  const displayFaceBox = boxCoordinates => {\n    console.log(boxCoordinates);\n    setBoxCoordinates(boxCoordinates);\n  };\n\n  const onInputChange = e => {\n    console.log(input);\n    setInput(e.target.value);\n  };\n\n  const onSubmit = () => {\n    setImageUrl(input);\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": \"ltbrp03abi48\",\n        \"app_id\": \"f232d0bac678457aae0377bd2cf8cd13\"\n      },\n      \"inputs\": [{\n        \"data\": {\n          \"image\": {\n            \"url\": `${input}`\n          }\n        }\n      }]\n    });\n    const clarifaiRequestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key 93c052416161441e9a3db9c5122a28a0'\n      },\n      body: raw\n    };\n    fetch(\"https://api.clarifai.com/v2/models/face-detection/outputs\", clarifaiRequestOptions).then(response => response.text()).then(result => {\n      if (result) {\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: userProfile.id\n          })\n        }).then(response => response.json()).then(count => {\n          setUserProfile({ ...userProfile,\n            entries: count\n          });\n        });\n      }\n\n      displayFaceBox(calculateBoxCoordinates(result));\n    }).catch(error => console.log('error', error));\n  };\n\n  const onRouteChange = route => {\n    if (route === 'signout') {\n      initialState();\n    } else if (route === 'home') {\n      setIsSignedIn(true);\n    }\n\n    setRoute(route);\n  };\n\n  const particlesInit = async main => {\n    await loadFull(main);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: onRouteChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {\n        name: userProfile.name,\n        entries: userProfile.entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: onInputChange,\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        boxCoordinates: boxCoordinates,\n        imageUrl: imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n      onRouteChange: onRouteChange,\n      loadUser: loadUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Register, {\n      onRouteChange: onRouteChange,\n      loadUser: loadUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Particles, {\n      id: \"tsparticles\",\n      init: particlesInit,\n      options: particlesOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WD9eSifp/Zs44Iv0rusqpNkk4mY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/erick/Documents/portfolio-projects/smartbrain/smartbrain/src/App.js"],"names":["React","useState","ImageLinkForm","Logo","Navigation","Rank","FaceRecognition","Particles","loadFull","SignIn","Register","App","input","setInput","imageUrl","setImageUrl","boxCoordinates","setBoxCoordinates","route","setRoute","isSignedIn","setIsSignedIn","userProfile","setUserProfile","id","name","email","entries","joined","initialState","loadUser","userData","particlesOptions","fpsLimit","interactivity","events","onHover","enable","mode","resize","modes","push","quantity","repulse","distance","duration","particles","color","value","links","opacity","width","collisions","move","direction","outModes","default","random","speed","straight","number","density","area","shape","type","size","min","max","detectRetina","calculateBoxCoordinates","data","faceCoordinates","JSON","parse","outputs","regions","region_info","bounding_box","console","log","image","document","getElementById","Number","height","leftColumn","left_col","topRow","top_row","rightColumn","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","e","target","onSubmit","raw","stringify","clarifaiRequestOptions","method","headers","body","fetch","then","response","text","result","json","count","catch","error","onRouteChange","particlesInit","main"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {  useState } from 'react';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport Logo from './components/logo/Logo';\nimport Navigation from './components/navigation/Navigation';\nimport Rank from './components/rank/Rank';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport SignIn from './components/signIn/SignIn';\nimport Register from './components/register/Register';\n\n\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [boxCoordinates, setBoxCoordinates] = useState({});\n  const [route, setRoute] = useState('signin');\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [userProfile, setUserProfile] = useState({\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  })\n\n  const initialState = () => {\n    setInput('');\n    setImageUrl('');\n    setBoxCoordinates({});\n    setRoute('signin');\n    setIsSignedIn(false);\n    setUserProfile({\n      id: '',\n      name: '',\n      email: '',\n      entries: 0,\n      joined: ''\n    });\n  }\n\n  const loadUser = (userData) => {\n    setUserProfile({\n      id: userData.id,\n      name: userData.name,\n      email: userData.email,\n      entries: userData.entries,\n      joined: userData.joined\n    })\n  }\n  \n  \n   const particlesOptions = {\n    fpsLimit: 120,\n    interactivity: {\n      events: {\n        onHover: {\n          enable: true,\n          mode: \"repulse\",\n        },\n        resize: true,\n      },\n      modes: {\n        push: {\n          quantity: 4,\n        },\n        repulse: {\n          distance: 100,\n          duration: 0.4,\n        },\n      },\n    },\n    particles: {\n      color: {\n        value: \"#ffffff\",\n      },\n      links: {\n        color: \"#ffffff\",\n        distance: 150,\n        enable: true,\n        opacity: 0.5,\n        width: 1,\n      },\n      collisions: {\n        enable: true,\n      },\n      move: {\n        direction: \"none\",\n        enable: true,\n        outModes: {\n          default: \"bounce\",\n        },\n        random: false,\n        speed: 2,\n        straight: false,\n      },\n      number: {\n        density: {\n          enable: true,\n          area: 900,\n        },\n        value: 80,\n      },\n      opacity: {\n        value: 0.5,\n      },\n      shape: {\n        type: \"circle\",\n      },\n      size: {\n        value: { min: 1, max: 5 },\n      },\n    },\n    detectRetina: true,\n  }\n\n  const calculateBoxCoordinates = (data) => {\n    const faceCoordinates = JSON.parse(data, null, 2).outputs[0].data.regions[0].region_info.bounding_box;\n    console.log(faceCoordinates)\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftColumn: faceCoordinates.left_col * width,\n      topRow: faceCoordinates.top_row * height,\n      rightColumn: width - (faceCoordinates.right_col * width),\n      bottomRow: height - (faceCoordinates.bottom_row * height)\n    }\n  }\n\n  const displayFaceBox = (boxCoordinates) => {\n    console.log(boxCoordinates)\n    setBoxCoordinates(boxCoordinates);\n  }\n\n  const onInputChange = (e) => {\n    console.log(input)\n    setInput(e.target.value)\n  }\n\n  const onSubmit = () => {\n    setImageUrl(input);\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n            \"user_id\": \"ltbrp03abi48\",\n            \"app_id\": \"f232d0bac678457aae0377bd2cf8cd13\"\n        },\n      \"inputs\": [\n        {\n          \"data\": {\n            \"image\": {\n              \"url\": `${input}`\n            }\n          }\n        }\n      ]\n    });\n    \n    const clarifaiRequestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key 93c052416161441e9a3db9c5122a28a0'\n      },\n      body: raw\n    };\n    \n    fetch(\"https://api.clarifai.com/v2/models/face-detection/outputs\", clarifaiRequestOptions)\n      .then(response => response.text())\n      .then(result => {\n        if(result) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: userProfile.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            setUserProfile({...userProfile, entries: count})\n          })\n        }\n        displayFaceBox(calculateBoxCoordinates(result))\n      })\n      .catch(error => console.log('error', error));\n  }\n\n  const onRouteChange = (route) => {\n    if (route === 'signout') {\n      initialState();\n    } else if (route === 'home') {\n      setIsSignedIn(true)\n    }\n    setRoute(route);\n  }\n\n  const particlesInit = async (main) => {\n    await loadFull(main);\n  };\n\n  return (\n    <div className=\"App\">\n      <Navigation isSignedIn={isSignedIn} onRouteChange={onRouteChange} />\n      { route === 'home' \n        ? <div>\n            <Logo />\n            <Rank name={userProfile.name} entries={userProfile.entries} />\n            <ImageLinkForm \n              onInputChange={onInputChange} \n              onSubmit={onSubmit}/>\n            <FaceRecognition boxCoordinates={boxCoordinates} imageUrl={imageUrl} />\n            </div>\n        : ( route === 'signin'\n        ? <SignIn onRouteChange={onRouteChange} loadUser={loadUser} />\n        : <Register onRouteChange={onRouteChange} loadUser={loadUser} />\n        )\n      }\n          \n      <Particles\n        id=\"tsparticles\"\n        init={particlesInit}\n        options={particlesOptions}\n    />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}